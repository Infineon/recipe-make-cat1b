{
    // Use IntelliSense to learn about possible attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    //
    // NOTE for JLink users:
    //
    //    Please create the following setting in your VSCode User Settings or in
    //    your global PATH.  Cortex-Debug needs to find the specific gdb-server
    //    you want to use.
    //
    //       Windows     : "cortex-debug.JLinkGDBServerPath": "<JLinkInstallDir>/JLinkGDBServerCL"
    //       Linux / Mac : "cortex-debug.JLinkGDBServerPath": "<JLinkInstallDir>/JLinkGDBServer"
    //
    //    User settings are located in:
    //
    //       Windows : %APPDATA%/Code/User/settings.json
    //       Mac     : $HOME/Library/Application Support/Code/User/settings.json
    //       Linux   : $HOME/.config/Code/User/settings.json
    //
    //    You can use the VSCode Settings UI to edit the files mentioned above.
    //
    //    For the JLink configurations in this file, the "device" name comes from
    //    the list found here:
    //       https://www.segger.com/downloads/supported-devices.php
    //
    //    To use KitProg3/MiniProg4 JTAG interface, update transport in openocd.tcl located at the
    //    project root - find "transport select [swd|jtag]" and specify the appropriate interface.
    //    To use JLink JTAG interface, update corresponding JLink configuration.
    //    Set "interface" property to "jtag" and delete the "_tm" suffix in the "device" property.
    //
    "version": "0.2.0",
    "configurations": [
        {//flash launches start//
            "name": "Launch CYW20829 CM33 (KitProg3_MiniProg4)",
            "type": "cortex-debug",
            "request": "launch",
            "cwd": "${workspaceFolder}",
            "executable": "&&_MTB_RECIPE__ELF_FILE&&",
            "servertype": "openocd",
            "searchDir": [
                "${workspaceFolder}",
                "${config:modustoolbox.toolsPath}/&&_MTB_RECIPE__OPENOCD_SCRIPTS_DIR_RELATIVE&&/",
                "&&_MTB_RECIPE__QSPI_CFG_PATH&&"
            ],
            "openOCDPreConfigLaunchCommands": [
                "set DEBUG_CERTIFICATE &&_MTB_RECIPE__DBG_CERTIFICATE_PATH&&"
            ],
            "configFiles": [
                "openocd.tcl"
            ],
            "overrideLaunchCommands": [
                "set mem inaccessible-by-default off",
                "-enable-pretty-printing",
                "set remotetimeout 15",
                "monitor reset init",
                // Comment this next line out if you don't want to reload program
                "monitor program {&&_MTB_RECIPE__HEX_FILE&&}",
                "monitor reset init"
            ],
            "overrideRestartCommands": [
                "starti"
            ],
            // svdFile is optional, it can be very large.
            "svdFile": "&&_MTB_RECIPE__SVD_FILE_NAME&&",
            "breakAfterReset": true,
            "runToEntryPoint": "main",    // Specifies application entry point name where program will halt
            "preLaunchTask": "Build",    // Set this to run a task from tasks.json
                                                        // before starting a debug session
            "showDevDebugOutput": "none"
        },
        // When using 'attach', make sure your program is running on the board and that your
        // executable matches the image in the chip exactly, or else strange things can happen
        // with breakpoints, variables, etc.
        {
            "name": "Attach CYW20829 CM33 (KitProg3_MiniProg4)",
            "type": "cortex-debug",
            "request": "attach",
            "cwd": "${workspaceFolder}",
            "executable": "&&_MTB_RECIPE__ELF_FILE&&",
            "servertype": "&&_MTB_RECIPE__ATTACH_SERVER_TYPE&&",
            "searchDir": [
                "${workspaceFolder}",
                "${config:modustoolbox.toolsPath}/&&_MTB_RECIPE__OPENOCD_SCRIPTS_DIR_RELATIVE&&/"
            ],
            "configFiles": [
                "openocd.tcl"
            ],
            "overrideAttachCommands": [
                "set mem inaccessible-by-default off",
                "-enable-pretty-printing",
                "set remotetimeout 15",
                "monitor halt"
            ],
            "overrideRestartCommands": [
                "starti"
            ],
            // svdFile is optional, it can be very large.
            "svdFile": "&&_MTB_RECIPE__SVD_FILE_NAME&&",
            "breakAfterReset": true,
            "runToEntryPoint": "main",    // Specifies application entry point name for restart/reset
            "showDevDebugOutput": "none"
        },
        {
            "name": "Erase (KitProg3_MiniProg4)",
            "type": "cortex-debug",
            "request": "launch",
            "cwd": "${workspaceFolder}",
            "executable": "&&_MTB_RECIPE__ELF_FILE&&",
            "servertype": "openocd",
            "searchDir": [
                "${workspaceFolder}",
                "${config:modustoolbox.toolsPath}/&&_MTB_RECIPE__OPENOCD_SCRIPTS_DIR_RELATIVE&&/",
                "&&_MTB_RECIPE__QSPI_CFG_PATH&&"
            ],
            "openOCDPreConfigLaunchCommands": [
                "set DEBUG_CERTIFICATE &&_MTB_RECIPE__DBG_CERTIFICATE_PATH&&"
            ],
            "configFiles": [
                "openocd.tcl"
            ],
            "overrideLaunchCommands": [
                "set remotetimeout 15",
                "monitor reset init",
                "monitor erase_all"
            ],
            "postStartSessionCommands": [
                "quit"
            ],
            "showDevDebugOutput": "none"
        },
        {
            "name": "Program (KitProg3_MiniProg4)",
            "type": "cortex-debug",
            "request": "launch",
            "cwd": "${workspaceFolder}",
            "executable": "&&_MTB_RECIPE__ELF_FILE&&",
            "servertype": "openocd",
            "searchDir": [
                "${workspaceFolder}",
                "${config:modustoolbox.toolsPath}/&&_MTB_RECIPE__OPENOCD_SCRIPTS_DIR_RELATIVE&&/",
                "&&_MTB_RECIPE__QSPI_CFG_PATH&&"
            ],
            "openOCDPreConfigLaunchCommands": [
                "set DEBUG_CERTIFICATE &&_MTB_RECIPE__DBG_CERTIFICATE_PATH&&"
            ],
            "configFiles": [
                "openocd.tcl"
            ],
            "overrideLaunchCommands": [
                "set remotetimeout 15",
                "monitor program {&&_MTB_RECIPE__HEX_FILE&&}",
                "monitor poll off",
                "monitor targets cyw20829.sysap",
                "monitor mxs40v2::toggle_xres",
                "monitor shutdown"
            ],
            "postStartSessionCommands": [
                "quit"
            ],
            "preLaunchTask": "Build",    // Set this to run a task from tasks.json
                                                        // before device programming
            "showDevDebugOutput": "none"
        },
        {
            "name": "Launch CYW20829 CM33 (JLink)",
            "type": "cortex-debug",
            "request": "launch",
            "cwd": "${workspaceFolder}",
            "executable": "&&_MTB_RECIPE__ELF_FILE&&",
            "servertype": "jlink",
            "device": "&&_MTB_RECIPE__JLINK_CFG&&",
            "interface": "swd",
            "preLaunchCommands": [
                // Program via the hex file to get complete coverage
                "exec-file &&_MTB_RECIPE__HEX_FILE&&"
            ],
            "overrideRestartCommands": [
                "starti"
            ],
            // svdFile is optional, it can be very large.
            "svdFile": "&&_MTB_RECIPE__SVD_FILE_NAME&&",
            "breakAfterReset": true,
            "runToEntryPoint": "main",    // Specifies application entry point name for restart/reset
            "preLaunchTask": "Build", // Set this to run a task from tasks.json before
                                                     // starting a debug session
            "showDevDebugOutput": "none"
        },
        // When using 'attach', make sure your program is running on the board and that your
        // executable matches the image in the chip exactly, or else strange things can happen
        // with breakpoints, variables, etc.
        {
            "name": "Attach CYW20829 CM33 (JLink)",
            "type": "cortex-debug",
            "request": "attach",
            "cwd": "${workspaceFolder}",
            "executable": "&&_MTB_RECIPE__ELF_FILE&&",
            "servertype": "jlink",
            "device": "&&_MTB_RECIPE__JLINK_CFG&&",
            "interface": "swd",
            "overrideRestartCommands": [
                "starti"
            ],
            // svdFile is optional, it can be very large.
            "svdFile": "&&_MTB_RECIPE__SVD_FILE_NAME&&",
            "breakAfterReset": true,
            "runToEntryPoint": "main",    // Specifies application entry point name for restart/reset
            "showDevDebugOutput": "none"
        },
        {
            "name": "Erase (JLink)",
            "type": "cortex-debug",
            "request": "launch",
            "cwd": "${workspaceFolder}",
            // executable not needed but need some valid file to get the session to start
            "executable": "&&_MTB_RECIPE__ELF_FILE&&",
            "servertype": "jlink",
            "device": "&&_MTB_RECIPE__JLINK_CFG&&",
            "interface": "swd",
            "overrideLaunchCommands": [
                "monitor exec EnableEraseAllFlashBanks", // enable erasing of external memory
                "monitor reset",      // Perform pre-reset
                "monitor flash erase",
                "monitor reset"       // Perform post-erase reset
            ],
            "postStartSessionCommands": [
                "quit"
            ],
            "showDevDebugOutput": "none"
        },
        {
            "name": "Program (JLink)",
            "type": "cortex-debug",
            "request": "launch",
            "cwd": "${workspaceFolder}",
            // executable not needed but need some valid file to get the session to start
            "executable": "&&_MTB_RECIPE__ELF_FILE&&",
            "servertype": "jlink",
            "device": "&&_MTB_RECIPE__JLINK_CFG&&",
            "interface": "swd",
            "preLaunchCommands": [
                // Program via the hex file to get complete coverage
                "exec-file &&_MTB_RECIPE__HEX_FILE&&"
            ],
            "overrideLaunchCommands": [
                "monitor reset",      // Perform pre-reset
                "-target-download",
                "monitor reset",      // Perform post-program reset
                "monitor go"
            ],
            "postStartSessionCommands": [
                "quit"
            ],
            "preLaunchTask": "Build",    // Set this to run a task from tasks.json
                                                        // before device programming
            "showDevDebugOutput": "none"
        },//flash launches end//
        {//ram launches start//
            "name": "Launch RAM CYW20829 CM33 (KitProg3_MiniProg4)",
            "type": "cortex-debug",
            "request": "launch",
            "cwd": "${workspaceFolder}",
            "executable": "&&_MTB_RECIPE__ELF_FILE&&",
            "servertype": "openocd",
            "interface": "swd",
            "searchDir": [
                "${workspaceFolder}",
                "${config:modustoolbox.toolsPath}/&&_MTB_RECIPE__OPENOCD_SCRIPTS_DIR_RELATIVE&&/"
            ],
            "openOCDPreConfigLaunchCommands": [
                "gdb_breakpoint_override hard"
            ],
            "configFiles": [
                "openocd.tcl"
            ],
            "overrideLaunchCommands": [
                "set mem inaccessible-by-default off",
                "-enable-pretty-printing",
                "set remotetimeout 15",
                "monitor reset init",
                "load &&_MTB_RECIPE__HEX_FILE&&",
                "set $pc = &&&PC_SYMBOL&&",
                "set $sp = &&&SP_SYMBOL&&"
            ],
            "overrideRestartCommands": [
                "monitor reset init",
                "load &&_MTB_RECIPE__HEX_FILE&&",
                "set $pc = &&&PC_SYMBOL&&",
                "set $sp = &&&SP_SYMBOL&&"
            ],
            // svdFile is optional, it can be very large.
            "svdFile": "&&_MTB_RECIPE__SVD_FILE_NAME&&",
            "breakAfterReset": true,
            "runToEntryPoint": "main",    // Specifies application entry point name where program will halt
            "preLaunchTask": "Build",        // Set this to run a task from tasks.json
                                                                    // before starting a debug session
            "showDevDebugOutput": "none"
        },
        // When using 'attach', make sure your program is running on the board and that your executable matches
        // the image in the chip exactly, or else strange things can happen with breakpoint, variables, etc.
        {
            "name": "Attach RAM CYW20829 CM33 (KitProg3_MiniProg4)",
            "type": "cortex-debug",
            "request": "attach",
            "cwd": "${workspaceFolder}",
            "executable": "&&_MTB_RECIPE__ELF_FILE&&",
            "servertype": "openocd",
            "interface": "swd",
            "searchDir": [
                "${workspaceFolder}",
                "${config:modustoolbox.toolsPath}/&&_MTB_RECIPE__OPENOCD_SCRIPTS_DIR_RELATIVE&&/"
            ],
            "openOCDPreConfigLaunchCommands": [
                "gdb_breakpoint_override hard"
            ],
            "configFiles": [
                "openocd.tcl"
            ],
            "overrideAttachCommands": [
                "set mem inaccessible-by-default off",
                "-enable-pretty-printing",
                "set remotetimeout 15",
                "monitor halt"
            ],
            "overrideRestartCommands": [
                "monitor reset init",
                "load &&_MTB_RECIPE__HEX_FILE&&",
                "set $pc = &&&PC_SYMBOL&&",
                "set $sp = &&&SP_SYMBOL&&"
            ],
            // svdFile is optional, it can be very large.
            "svdFile": "&&_MTB_RECIPE__SVD_FILE_NAME&&",
            "breakAfterReset": true,
            "showDevDebugOutput": "none"
        },
        {
            "name": "Program RAM (KitProg3_MiniProg4)",
            "type": "cortex-debug",
            "request": "launch",
            "cwd": "${workspaceFolder}",
            "executable": "&&_MTB_RECIPE__ELF_FILE&&",
            "servertype": "openocd",
            "interface": "swd",
            "searchDir": [
                "${workspaceFolder}",
                "${config:modustoolbox.toolsPath}/&&_MTB_RECIPE__OPENOCD_SCRIPTS_DIR_RELATIVE&&/"
            ],
            "configFiles": [
                "openocd.tcl"
            ],
            "overrideLaunchCommands": [
                "monitor reset init",
                "load &&_MTB_RECIPE__HEX_FILE&&",
                "set $pc = &&&PC_SYMBOL&&",
                "set $sp = &&&SP_SYMBOL&&",
            ],
            "postStartSessionCommands": [
                "quit"
            ],
            "preLaunchTask": "Build",    // Set this to run a task from tasks.json
                                                                // before device programming
            "showDevDebugOutput": "none"
        }//ram launches end//
    ]
}
